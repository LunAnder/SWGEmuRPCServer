// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CharacterDetails.proto

#ifndef PROTOBUF_CharacterDetails_2eproto__INCLUDED
#define PROTOBUF_CharacterDetails_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "InventoryItem.pb.h"
// @@protoc_insertion_point(includes)

namespace swgemurpcserver {
namespace rpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CharacterDetails_2eproto();
void protobuf_AssignDesc_CharacterDetails_2eproto();
void protobuf_ShutdownFile_CharacterDetails_2eproto();

class SWGEmuCharacterDetail;
class SWGEmuCharacterStructureItem;
class GetCharacterDetailsRequest;
class GetCharacterDetailsResponse;

// ===================================================================

class SWGEmuCharacterDetail : public ::google::protobuf::Message {
 public:
  SWGEmuCharacterDetail();
  virtual ~SWGEmuCharacterDetail();

  SWGEmuCharacterDetail(const SWGEmuCharacterDetail& from);

  inline SWGEmuCharacterDetail& operator=(const SWGEmuCharacterDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SWGEmuCharacterDetail& default_instance();

  void Swap(SWGEmuCharacterDetail* other);

  // implements Message ----------------------------------------------

  SWGEmuCharacterDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SWGEmuCharacterDetail& from);
  void MergeFrom(const SWGEmuCharacterDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // required fixed32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // required string first_name = 3;
  inline bool has_first_name() const;
  inline void clear_first_name();
  static const int kFirstNameFieldNumber = 3;
  inline const ::std::string& first_name() const;
  inline void set_first_name(const ::std::string& value);
  inline void set_first_name(const char* value);
  inline void set_first_name(const char* value, size_t size);
  inline ::std::string* mutable_first_name();
  inline ::std::string* release_first_name();
  inline void set_allocated_first_name(::std::string* first_name);

  // required string sur_name = 4;
  inline bool has_sur_name() const;
  inline void clear_sur_name();
  static const int kSurNameFieldNumber = 4;
  inline const ::std::string& sur_name() const;
  inline void set_sur_name(const ::std::string& value);
  inline void set_sur_name(const char* value);
  inline void set_sur_name(const char* value, size_t size);
  inline ::std::string* mutable_sur_name();
  inline ::std::string* release_sur_name();
  inline void set_allocated_sur_name(::std::string* sur_name);

  // optional fixed32 bank_credits = 5;
  inline bool has_bank_credits() const;
  inline void clear_bank_credits();
  static const int kBankCreditsFieldNumber = 5;
  inline ::google::protobuf::uint32 bank_credits() const;
  inline void set_bank_credits(::google::protobuf::uint32 value);

  // optional fixed32 cash_credits = 6;
  inline bool has_cash_credits() const;
  inline void clear_cash_credits();
  static const int kCashCreditsFieldNumber = 6;
  inline ::google::protobuf::uint32 cash_credits() const;
  inline void set_cash_credits(::google::protobuf::uint32 value);

  // optional fixed32 base_health = 7;
  inline bool has_base_health() const;
  inline void clear_base_health();
  static const int kBaseHealthFieldNumber = 7;
  inline ::google::protobuf::uint32 base_health() const;
  inline void set_base_health(::google::protobuf::uint32 value);

  // optional fixed32 base_action = 8;
  inline bool has_base_action() const;
  inline void clear_base_action();
  static const int kBaseActionFieldNumber = 8;
  inline ::google::protobuf::uint32 base_action() const;
  inline void set_base_action(::google::protobuf::uint32 value);

  // optional fixed32 base_mind = 10;
  inline bool has_base_mind() const;
  inline void clear_base_mind();
  static const int kBaseMindFieldNumber = 10;
  inline ::google::protobuf::uint32 base_mind() const;
  inline void set_base_mind(::google::protobuf::uint32 value);

  // optional string biography = 11;
  inline bool has_biography() const;
  inline void clear_biography();
  static const int kBiographyFieldNumber = 11;
  inline const ::std::string& biography() const;
  inline void set_biography(const ::std::string& value);
  inline void set_biography(const char* value);
  inline void set_biography(const char* value, size_t size);
  inline ::std::string* mutable_biography();
  inline ::std::string* release_biography();
  inline void set_allocated_biography(::std::string* biography);

  // optional int32 remaining_plots = 12;
  inline bool has_remaining_plots() const;
  inline void clear_remaining_plots();
  static const int kRemainingPlotsFieldNumber = 12;
  inline ::google::protobuf::int32 remaining_plots() const;
  inline void set_remaining_plots(::google::protobuf::int32 value);

  // optional int32 maximumim_plots = 13;
  inline bool has_maximumim_plots() const;
  inline void clear_maximumim_plots();
  static const int kMaximumimPlotsFieldNumber = 13;
  inline ::google::protobuf::int32 maximumim_plots() const;
  inline void set_maximumim_plots(::google::protobuf::int32 value);

  // optional string title = 14;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 14;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string appearance_file = 15;
  inline bool has_appearance_file() const;
  inline void clear_appearance_file();
  static const int kAppearanceFileFieldNumber = 15;
  inline const ::std::string& appearance_file() const;
  inline void set_appearance_file(const ::std::string& value);
  inline void set_appearance_file(const char* value);
  inline void set_appearance_file(const char* value, size_t size);
  inline ::std::string* mutable_appearance_file();
  inline ::std::string* release_appearance_file();
  inline void set_allocated_appearance_file(::std::string* appearance_file);

  // repeated .swgemurpcserver.rpc.CharacterInventoryItem inventory_items = 20;
  inline int inventory_items_size() const;
  inline void clear_inventory_items();
  static const int kInventoryItemsFieldNumber = 20;
  inline const ::swgemurpcserver::rpc::CharacterInventoryItem& inventory_items(int index) const;
  inline ::swgemurpcserver::rpc::CharacterInventoryItem* mutable_inventory_items(int index);
  inline ::swgemurpcserver::rpc::CharacterInventoryItem* add_inventory_items();
  inline const ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::CharacterInventoryItem >&
      inventory_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::CharacterInventoryItem >*
      mutable_inventory_items();

  // repeated .swgemurpcserver.rpc.SWGEmuCharacterStructureItem structures = 21;
  inline int structures_size() const;
  inline void clear_structures();
  static const int kStructuresFieldNumber = 21;
  inline const ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem& structures(int index) const;
  inline ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem* mutable_structures(int index);
  inline ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem* add_structures();
  inline const ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem >&
      structures() const;
  inline ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem >*
      mutable_structures();

  // @@protoc_insertion_point(class_scope:swgemurpcserver.rpc.SWGEmuCharacterDetail)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_first_name();
  inline void clear_has_first_name();
  inline void set_has_sur_name();
  inline void clear_has_sur_name();
  inline void set_has_bank_credits();
  inline void clear_has_bank_credits();
  inline void set_has_cash_credits();
  inline void clear_has_cash_credits();
  inline void set_has_base_health();
  inline void clear_has_base_health();
  inline void set_has_base_action();
  inline void clear_has_base_action();
  inline void set_has_base_mind();
  inline void clear_has_base_mind();
  inline void set_has_biography();
  inline void clear_has_biography();
  inline void set_has_remaining_plots();
  inline void clear_has_remaining_plots();
  inline void set_has_maximumim_plots();
  inline void clear_has_maximumim_plots();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_appearance_file();
  inline void clear_has_appearance_file();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::std::string* first_name_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 bank_credits_;
  ::std::string* sur_name_;
  ::google::protobuf::uint32 cash_credits_;
  ::google::protobuf::uint32 base_health_;
  ::google::protobuf::uint32 base_action_;
  ::google::protobuf::uint32 base_mind_;
  ::std::string* biography_;
  ::google::protobuf::int32 remaining_plots_;
  ::google::protobuf::int32 maximumim_plots_;
  ::std::string* title_;
  ::std::string* appearance_file_;
  ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::CharacterInventoryItem > inventory_items_;
  ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem > structures_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_CharacterDetails_2eproto();
  friend void protobuf_AssignDesc_CharacterDetails_2eproto();
  friend void protobuf_ShutdownFile_CharacterDetails_2eproto();

  void InitAsDefaultInstance();
  static SWGEmuCharacterDetail* default_instance_;
};
// -------------------------------------------------------------------

class SWGEmuCharacterStructureItem : public ::google::protobuf::Message {
 public:
  SWGEmuCharacterStructureItem();
  virtual ~SWGEmuCharacterStructureItem();

  SWGEmuCharacterStructureItem(const SWGEmuCharacterStructureItem& from);

  inline SWGEmuCharacterStructureItem& operator=(const SWGEmuCharacterStructureItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SWGEmuCharacterStructureItem& default_instance();

  void Swap(SWGEmuCharacterStructureItem* other);

  // implements Message ----------------------------------------------

  SWGEmuCharacterStructureItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SWGEmuCharacterStructureItem& from);
  void MergeFrom(const SWGEmuCharacterStructureItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 object_id = 1;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // required string object_name = 2;
  inline bool has_object_name() const;
  inline void clear_object_name();
  static const int kObjectNameFieldNumber = 2;
  inline const ::std::string& object_name() const;
  inline void set_object_name(const ::std::string& value);
  inline void set_object_name(const char* value);
  inline void set_object_name(const char* value, size_t size);
  inline ::std::string* mutable_object_name();
  inline ::std::string* release_object_name();
  inline void set_allocated_object_name(::std::string* object_name);

  // required string display_name = 3;
  inline bool has_display_name() const;
  inline void clear_display_name();
  static const int kDisplayNameFieldNumber = 3;
  inline const ::std::string& display_name() const;
  inline void set_display_name(const ::std::string& value);
  inline void set_display_name(const char* value);
  inline void set_display_name(const char* value, size_t size);
  inline ::std::string* mutable_display_name();
  inline ::std::string* release_display_name();
  inline void set_allocated_display_name(::std::string* display_name);

  // @@protoc_insertion_point(class_scope:swgemurpcserver.rpc.SWGEmuCharacterStructureItem)
 private:
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_object_name();
  inline void clear_has_object_name();
  inline void set_has_display_name();
  inline void clear_has_display_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::std::string* object_name_;
  ::std::string* display_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_CharacterDetails_2eproto();
  friend void protobuf_AssignDesc_CharacterDetails_2eproto();
  friend void protobuf_ShutdownFile_CharacterDetails_2eproto();

  void InitAsDefaultInstance();
  static SWGEmuCharacterStructureItem* default_instance_;
};
// -------------------------------------------------------------------

class GetCharacterDetailsRequest : public ::google::protobuf::Message {
 public:
  GetCharacterDetailsRequest();
  virtual ~GetCharacterDetailsRequest();

  GetCharacterDetailsRequest(const GetCharacterDetailsRequest& from);

  inline GetCharacterDetailsRequest& operator=(const GetCharacterDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCharacterDetailsRequest& default_instance();

  void Swap(GetCharacterDetailsRequest* other);

  // implements Message ----------------------------------------------

  GetCharacterDetailsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCharacterDetailsRequest& from);
  void MergeFrom(const GetCharacterDetailsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional fixed64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);

  // optional fixed32 galaxy_id = 3;
  inline bool has_galaxy_id() const;
  inline void clear_galaxy_id();
  static const int kGalaxyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 galaxy_id() const;
  inline void set_galaxy_id(::google::protobuf::uint32 value);

  // optional string first_name = 7;
  inline bool has_first_name() const;
  inline void clear_first_name();
  static const int kFirstNameFieldNumber = 7;
  inline const ::std::string& first_name() const;
  inline void set_first_name(const ::std::string& value);
  inline void set_first_name(const char* value);
  inline void set_first_name(const char* value, size_t size);
  inline ::std::string* mutable_first_name();
  inline ::std::string* release_first_name();
  inline void set_allocated_first_name(::std::string* first_name);

  // optional string sur_name = 8;
  inline bool has_sur_name() const;
  inline void clear_sur_name();
  static const int kSurNameFieldNumber = 8;
  inline const ::std::string& sur_name() const;
  inline void set_sur_name(const ::std::string& value);
  inline void set_sur_name(const char* value);
  inline void set_sur_name(const char* value, size_t size);
  inline ::std::string* mutable_sur_name();
  inline ::std::string* release_sur_name();
  inline void set_allocated_sur_name(::std::string* sur_name);

  // optional string galaxy_name = 9;
  inline bool has_galaxy_name() const;
  inline void clear_galaxy_name();
  static const int kGalaxyNameFieldNumber = 9;
  inline const ::std::string& galaxy_name() const;
  inline void set_galaxy_name(const ::std::string& value);
  inline void set_galaxy_name(const char* value);
  inline void set_galaxy_name(const char* value, size_t size);
  inline ::std::string* mutable_galaxy_name();
  inline ::std::string* release_galaxy_name();
  inline void set_allocated_galaxy_name(::std::string* galaxy_name);

  // @@protoc_insertion_point(class_scope:swgemurpcserver.rpc.GetCharacterDetailsRequest)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_object_id();
  inline void clear_has_object_id();
  inline void set_has_galaxy_id();
  inline void clear_has_galaxy_id();
  inline void set_has_first_name();
  inline void clear_has_first_name();
  inline void set_has_sur_name();
  inline void clear_has_sur_name();
  inline void set_has_galaxy_name();
  inline void clear_has_galaxy_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 galaxy_id_;
  ::std::string* first_name_;
  ::std::string* sur_name_;
  ::std::string* galaxy_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_CharacterDetails_2eproto();
  friend void protobuf_AssignDesc_CharacterDetails_2eproto();
  friend void protobuf_ShutdownFile_CharacterDetails_2eproto();

  void InitAsDefaultInstance();
  static GetCharacterDetailsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetCharacterDetailsResponse : public ::google::protobuf::Message {
 public:
  GetCharacterDetailsResponse();
  virtual ~GetCharacterDetailsResponse();

  GetCharacterDetailsResponse(const GetCharacterDetailsResponse& from);

  inline GetCharacterDetailsResponse& operator=(const GetCharacterDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCharacterDetailsResponse& default_instance();

  void Swap(GetCharacterDetailsResponse* other);

  // implements Message ----------------------------------------------

  GetCharacterDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCharacterDetailsResponse& from);
  void MergeFrom(const GetCharacterDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .swgemurpcserver.rpc.SWGEmuCharacterDetail character_details = 1;
  inline int character_details_size() const;
  inline void clear_character_details();
  static const int kCharacterDetailsFieldNumber = 1;
  inline const ::swgemurpcserver::rpc::SWGEmuCharacterDetail& character_details(int index) const;
  inline ::swgemurpcserver::rpc::SWGEmuCharacterDetail* mutable_character_details(int index);
  inline ::swgemurpcserver::rpc::SWGEmuCharacterDetail* add_character_details();
  inline const ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterDetail >&
      character_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterDetail >*
      mutable_character_details();

  // @@protoc_insertion_point(class_scope:swgemurpcserver.rpc.GetCharacterDetailsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterDetail > character_details_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_CharacterDetails_2eproto();
  friend void protobuf_AssignDesc_CharacterDetails_2eproto();
  friend void protobuf_ShutdownFile_CharacterDetails_2eproto();

  void InitAsDefaultInstance();
  static GetCharacterDetailsResponse* default_instance_;
};
// ===================================================================

class SWGEmuCharacterDetailsService_Stub;

class SWGEmuCharacterDetailsService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline SWGEmuCharacterDetailsService() {};
 public:
  virtual ~SWGEmuCharacterDetailsService();

  typedef SWGEmuCharacterDetailsService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetCharacterDetails(::google::protobuf::RpcController* controller,
                       const ::swgemurpcserver::rpc::GetCharacterDetailsRequest* request,
                       ::swgemurpcserver::rpc::GetCharacterDetailsResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SWGEmuCharacterDetailsService);
};

class SWGEmuCharacterDetailsService_Stub : public SWGEmuCharacterDetailsService {
 public:
  SWGEmuCharacterDetailsService_Stub(::google::protobuf::RpcChannel* channel);
  SWGEmuCharacterDetailsService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~SWGEmuCharacterDetailsService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements SWGEmuCharacterDetailsService ------------------------------------------

  void GetCharacterDetails(::google::protobuf::RpcController* controller,
                       const ::swgemurpcserver::rpc::GetCharacterDetailsRequest* request,
                       ::swgemurpcserver::rpc::GetCharacterDetailsResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SWGEmuCharacterDetailsService_Stub);
};


// ===================================================================


// ===================================================================

// SWGEmuCharacterDetail

// required fixed64 object_id = 1;
inline bool SWGEmuCharacterDetail::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SWGEmuCharacterDetail::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SWGEmuCharacterDetail::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SWGEmuCharacterDetail::object_id() const {
  return object_id_;
}
inline void SWGEmuCharacterDetail::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required fixed32 account_id = 2;
inline bool SWGEmuCharacterDetail::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SWGEmuCharacterDetail::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SWGEmuCharacterDetail::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 SWGEmuCharacterDetail::account_id() const {
  return account_id_;
}
inline void SWGEmuCharacterDetail::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// required string first_name = 3;
inline bool SWGEmuCharacterDetail::has_first_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_first_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SWGEmuCharacterDetail::clear_has_first_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SWGEmuCharacterDetail::clear_first_name() {
  if (first_name_ != &::google::protobuf::internal::kEmptyString) {
    first_name_->clear();
  }
  clear_has_first_name();
}
inline const ::std::string& SWGEmuCharacterDetail::first_name() const {
  return *first_name_;
}
inline void SWGEmuCharacterDetail::set_first_name(const ::std::string& value) {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  first_name_->assign(value);
}
inline void SWGEmuCharacterDetail::set_first_name(const char* value) {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  first_name_->assign(value);
}
inline void SWGEmuCharacterDetail::set_first_name(const char* value, size_t size) {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  first_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterDetail::mutable_first_name() {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  return first_name_;
}
inline ::std::string* SWGEmuCharacterDetail::release_first_name() {
  clear_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = first_name_;
    first_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterDetail::set_allocated_first_name(::std::string* first_name) {
  if (first_name_ != &::google::protobuf::internal::kEmptyString) {
    delete first_name_;
  }
  if (first_name) {
    set_has_first_name();
    first_name_ = first_name;
  } else {
    clear_has_first_name();
    first_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string sur_name = 4;
inline bool SWGEmuCharacterDetail::has_sur_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_sur_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SWGEmuCharacterDetail::clear_has_sur_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SWGEmuCharacterDetail::clear_sur_name() {
  if (sur_name_ != &::google::protobuf::internal::kEmptyString) {
    sur_name_->clear();
  }
  clear_has_sur_name();
}
inline const ::std::string& SWGEmuCharacterDetail::sur_name() const {
  return *sur_name_;
}
inline void SWGEmuCharacterDetail::set_sur_name(const ::std::string& value) {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  sur_name_->assign(value);
}
inline void SWGEmuCharacterDetail::set_sur_name(const char* value) {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  sur_name_->assign(value);
}
inline void SWGEmuCharacterDetail::set_sur_name(const char* value, size_t size) {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  sur_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterDetail::mutable_sur_name() {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  return sur_name_;
}
inline ::std::string* SWGEmuCharacterDetail::release_sur_name() {
  clear_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sur_name_;
    sur_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterDetail::set_allocated_sur_name(::std::string* sur_name) {
  if (sur_name_ != &::google::protobuf::internal::kEmptyString) {
    delete sur_name_;
  }
  if (sur_name) {
    set_has_sur_name();
    sur_name_ = sur_name;
  } else {
    clear_has_sur_name();
    sur_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional fixed32 bank_credits = 5;
inline bool SWGEmuCharacterDetail::has_bank_credits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_bank_credits() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SWGEmuCharacterDetail::clear_has_bank_credits() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SWGEmuCharacterDetail::clear_bank_credits() {
  bank_credits_ = 0u;
  clear_has_bank_credits();
}
inline ::google::protobuf::uint32 SWGEmuCharacterDetail::bank_credits() const {
  return bank_credits_;
}
inline void SWGEmuCharacterDetail::set_bank_credits(::google::protobuf::uint32 value) {
  set_has_bank_credits();
  bank_credits_ = value;
}

// optional fixed32 cash_credits = 6;
inline bool SWGEmuCharacterDetail::has_cash_credits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_cash_credits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SWGEmuCharacterDetail::clear_has_cash_credits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SWGEmuCharacterDetail::clear_cash_credits() {
  cash_credits_ = 0u;
  clear_has_cash_credits();
}
inline ::google::protobuf::uint32 SWGEmuCharacterDetail::cash_credits() const {
  return cash_credits_;
}
inline void SWGEmuCharacterDetail::set_cash_credits(::google::protobuf::uint32 value) {
  set_has_cash_credits();
  cash_credits_ = value;
}

// optional fixed32 base_health = 7;
inline bool SWGEmuCharacterDetail::has_base_health() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_base_health() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SWGEmuCharacterDetail::clear_has_base_health() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SWGEmuCharacterDetail::clear_base_health() {
  base_health_ = 0u;
  clear_has_base_health();
}
inline ::google::protobuf::uint32 SWGEmuCharacterDetail::base_health() const {
  return base_health_;
}
inline void SWGEmuCharacterDetail::set_base_health(::google::protobuf::uint32 value) {
  set_has_base_health();
  base_health_ = value;
}

// optional fixed32 base_action = 8;
inline bool SWGEmuCharacterDetail::has_base_action() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_base_action() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SWGEmuCharacterDetail::clear_has_base_action() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SWGEmuCharacterDetail::clear_base_action() {
  base_action_ = 0u;
  clear_has_base_action();
}
inline ::google::protobuf::uint32 SWGEmuCharacterDetail::base_action() const {
  return base_action_;
}
inline void SWGEmuCharacterDetail::set_base_action(::google::protobuf::uint32 value) {
  set_has_base_action();
  base_action_ = value;
}

// optional fixed32 base_mind = 10;
inline bool SWGEmuCharacterDetail::has_base_mind() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_base_mind() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SWGEmuCharacterDetail::clear_has_base_mind() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SWGEmuCharacterDetail::clear_base_mind() {
  base_mind_ = 0u;
  clear_has_base_mind();
}
inline ::google::protobuf::uint32 SWGEmuCharacterDetail::base_mind() const {
  return base_mind_;
}
inline void SWGEmuCharacterDetail::set_base_mind(::google::protobuf::uint32 value) {
  set_has_base_mind();
  base_mind_ = value;
}

// optional string biography = 11;
inline bool SWGEmuCharacterDetail::has_biography() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_biography() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SWGEmuCharacterDetail::clear_has_biography() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SWGEmuCharacterDetail::clear_biography() {
  if (biography_ != &::google::protobuf::internal::kEmptyString) {
    biography_->clear();
  }
  clear_has_biography();
}
inline const ::std::string& SWGEmuCharacterDetail::biography() const {
  return *biography_;
}
inline void SWGEmuCharacterDetail::set_biography(const ::std::string& value) {
  set_has_biography();
  if (biography_ == &::google::protobuf::internal::kEmptyString) {
    biography_ = new ::std::string;
  }
  biography_->assign(value);
}
inline void SWGEmuCharacterDetail::set_biography(const char* value) {
  set_has_biography();
  if (biography_ == &::google::protobuf::internal::kEmptyString) {
    biography_ = new ::std::string;
  }
  biography_->assign(value);
}
inline void SWGEmuCharacterDetail::set_biography(const char* value, size_t size) {
  set_has_biography();
  if (biography_ == &::google::protobuf::internal::kEmptyString) {
    biography_ = new ::std::string;
  }
  biography_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterDetail::mutable_biography() {
  set_has_biography();
  if (biography_ == &::google::protobuf::internal::kEmptyString) {
    biography_ = new ::std::string;
  }
  return biography_;
}
inline ::std::string* SWGEmuCharacterDetail::release_biography() {
  clear_has_biography();
  if (biography_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = biography_;
    biography_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterDetail::set_allocated_biography(::std::string* biography) {
  if (biography_ != &::google::protobuf::internal::kEmptyString) {
    delete biography_;
  }
  if (biography) {
    set_has_biography();
    biography_ = biography;
  } else {
    clear_has_biography();
    biography_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 remaining_plots = 12;
inline bool SWGEmuCharacterDetail::has_remaining_plots() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_remaining_plots() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SWGEmuCharacterDetail::clear_has_remaining_plots() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SWGEmuCharacterDetail::clear_remaining_plots() {
  remaining_plots_ = 0;
  clear_has_remaining_plots();
}
inline ::google::protobuf::int32 SWGEmuCharacterDetail::remaining_plots() const {
  return remaining_plots_;
}
inline void SWGEmuCharacterDetail::set_remaining_plots(::google::protobuf::int32 value) {
  set_has_remaining_plots();
  remaining_plots_ = value;
}

// optional int32 maximumim_plots = 13;
inline bool SWGEmuCharacterDetail::has_maximumim_plots() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_maximumim_plots() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SWGEmuCharacterDetail::clear_has_maximumim_plots() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SWGEmuCharacterDetail::clear_maximumim_plots() {
  maximumim_plots_ = 0;
  clear_has_maximumim_plots();
}
inline ::google::protobuf::int32 SWGEmuCharacterDetail::maximumim_plots() const {
  return maximumim_plots_;
}
inline void SWGEmuCharacterDetail::set_maximumim_plots(::google::protobuf::int32 value) {
  set_has_maximumim_plots();
  maximumim_plots_ = value;
}

// optional string title = 14;
inline bool SWGEmuCharacterDetail::has_title() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_title() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SWGEmuCharacterDetail::clear_has_title() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SWGEmuCharacterDetail::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& SWGEmuCharacterDetail::title() const {
  return *title_;
}
inline void SWGEmuCharacterDetail::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void SWGEmuCharacterDetail::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void SWGEmuCharacterDetail::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterDetail::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* SWGEmuCharacterDetail::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterDetail::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string appearance_file = 15;
inline bool SWGEmuCharacterDetail::has_appearance_file() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SWGEmuCharacterDetail::set_has_appearance_file() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SWGEmuCharacterDetail::clear_has_appearance_file() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SWGEmuCharacterDetail::clear_appearance_file() {
  if (appearance_file_ != &::google::protobuf::internal::kEmptyString) {
    appearance_file_->clear();
  }
  clear_has_appearance_file();
}
inline const ::std::string& SWGEmuCharacterDetail::appearance_file() const {
  return *appearance_file_;
}
inline void SWGEmuCharacterDetail::set_appearance_file(const ::std::string& value) {
  set_has_appearance_file();
  if (appearance_file_ == &::google::protobuf::internal::kEmptyString) {
    appearance_file_ = new ::std::string;
  }
  appearance_file_->assign(value);
}
inline void SWGEmuCharacterDetail::set_appearance_file(const char* value) {
  set_has_appearance_file();
  if (appearance_file_ == &::google::protobuf::internal::kEmptyString) {
    appearance_file_ = new ::std::string;
  }
  appearance_file_->assign(value);
}
inline void SWGEmuCharacterDetail::set_appearance_file(const char* value, size_t size) {
  set_has_appearance_file();
  if (appearance_file_ == &::google::protobuf::internal::kEmptyString) {
    appearance_file_ = new ::std::string;
  }
  appearance_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterDetail::mutable_appearance_file() {
  set_has_appearance_file();
  if (appearance_file_ == &::google::protobuf::internal::kEmptyString) {
    appearance_file_ = new ::std::string;
  }
  return appearance_file_;
}
inline ::std::string* SWGEmuCharacterDetail::release_appearance_file() {
  clear_has_appearance_file();
  if (appearance_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = appearance_file_;
    appearance_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterDetail::set_allocated_appearance_file(::std::string* appearance_file) {
  if (appearance_file_ != &::google::protobuf::internal::kEmptyString) {
    delete appearance_file_;
  }
  if (appearance_file) {
    set_has_appearance_file();
    appearance_file_ = appearance_file;
  } else {
    clear_has_appearance_file();
    appearance_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .swgemurpcserver.rpc.CharacterInventoryItem inventory_items = 20;
inline int SWGEmuCharacterDetail::inventory_items_size() const {
  return inventory_items_.size();
}
inline void SWGEmuCharacterDetail::clear_inventory_items() {
  inventory_items_.Clear();
}
inline const ::swgemurpcserver::rpc::CharacterInventoryItem& SWGEmuCharacterDetail::inventory_items(int index) const {
  return inventory_items_.Get(index);
}
inline ::swgemurpcserver::rpc::CharacterInventoryItem* SWGEmuCharacterDetail::mutable_inventory_items(int index) {
  return inventory_items_.Mutable(index);
}
inline ::swgemurpcserver::rpc::CharacterInventoryItem* SWGEmuCharacterDetail::add_inventory_items() {
  return inventory_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::CharacterInventoryItem >&
SWGEmuCharacterDetail::inventory_items() const {
  return inventory_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::CharacterInventoryItem >*
SWGEmuCharacterDetail::mutable_inventory_items() {
  return &inventory_items_;
}

// repeated .swgemurpcserver.rpc.SWGEmuCharacterStructureItem structures = 21;
inline int SWGEmuCharacterDetail::structures_size() const {
  return structures_.size();
}
inline void SWGEmuCharacterDetail::clear_structures() {
  structures_.Clear();
}
inline const ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem& SWGEmuCharacterDetail::structures(int index) const {
  return structures_.Get(index);
}
inline ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem* SWGEmuCharacterDetail::mutable_structures(int index) {
  return structures_.Mutable(index);
}
inline ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem* SWGEmuCharacterDetail::add_structures() {
  return structures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem >&
SWGEmuCharacterDetail::structures() const {
  return structures_;
}
inline ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterStructureItem >*
SWGEmuCharacterDetail::mutable_structures() {
  return &structures_;
}

// -------------------------------------------------------------------

// SWGEmuCharacterStructureItem

// required fixed64 object_id = 1;
inline bool SWGEmuCharacterStructureItem::has_object_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SWGEmuCharacterStructureItem::set_has_object_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SWGEmuCharacterStructureItem::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SWGEmuCharacterStructureItem::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 SWGEmuCharacterStructureItem::object_id() const {
  return object_id_;
}
inline void SWGEmuCharacterStructureItem::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// required string object_name = 2;
inline bool SWGEmuCharacterStructureItem::has_object_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SWGEmuCharacterStructureItem::set_has_object_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SWGEmuCharacterStructureItem::clear_has_object_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SWGEmuCharacterStructureItem::clear_object_name() {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    object_name_->clear();
  }
  clear_has_object_name();
}
inline const ::std::string& SWGEmuCharacterStructureItem::object_name() const {
  return *object_name_;
}
inline void SWGEmuCharacterStructureItem::set_object_name(const ::std::string& value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void SWGEmuCharacterStructureItem::set_object_name(const char* value) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(value);
}
inline void SWGEmuCharacterStructureItem::set_object_name(const char* value, size_t size) {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  object_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterStructureItem::mutable_object_name() {
  set_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    object_name_ = new ::std::string;
  }
  return object_name_;
}
inline ::std::string* SWGEmuCharacterStructureItem::release_object_name() {
  clear_has_object_name();
  if (object_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_name_;
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterStructureItem::set_allocated_object_name(::std::string* object_name) {
  if (object_name_ != &::google::protobuf::internal::kEmptyString) {
    delete object_name_;
  }
  if (object_name) {
    set_has_object_name();
    object_name_ = object_name;
  } else {
    clear_has_object_name();
    object_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string display_name = 3;
inline bool SWGEmuCharacterStructureItem::has_display_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SWGEmuCharacterStructureItem::set_has_display_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SWGEmuCharacterStructureItem::clear_has_display_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SWGEmuCharacterStructureItem::clear_display_name() {
  if (display_name_ != &::google::protobuf::internal::kEmptyString) {
    display_name_->clear();
  }
  clear_has_display_name();
}
inline const ::std::string& SWGEmuCharacterStructureItem::display_name() const {
  return *display_name_;
}
inline void SWGEmuCharacterStructureItem::set_display_name(const ::std::string& value) {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  display_name_->assign(value);
}
inline void SWGEmuCharacterStructureItem::set_display_name(const char* value) {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  display_name_->assign(value);
}
inline void SWGEmuCharacterStructureItem::set_display_name(const char* value, size_t size) {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  display_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SWGEmuCharacterStructureItem::mutable_display_name() {
  set_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    display_name_ = new ::std::string;
  }
  return display_name_;
}
inline ::std::string* SWGEmuCharacterStructureItem::release_display_name() {
  clear_has_display_name();
  if (display_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = display_name_;
    display_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SWGEmuCharacterStructureItem::set_allocated_display_name(::std::string* display_name) {
  if (display_name_ != &::google::protobuf::internal::kEmptyString) {
    delete display_name_;
  }
  if (display_name) {
    set_has_display_name();
    display_name_ = display_name;
  } else {
    clear_has_display_name();
    display_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetCharacterDetailsRequest

// required fixed32 account_id = 1;
inline bool GetCharacterDetailsRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCharacterDetailsRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCharacterDetailsRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCharacterDetailsRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 GetCharacterDetailsRequest::account_id() const {
  return account_id_;
}
inline void GetCharacterDetailsRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional fixed64 object_id = 2;
inline bool GetCharacterDetailsRequest::has_object_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCharacterDetailsRequest::set_has_object_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCharacterDetailsRequest::clear_has_object_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCharacterDetailsRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  clear_has_object_id();
}
inline ::google::protobuf::uint64 GetCharacterDetailsRequest::object_id() const {
  return object_id_;
}
inline void GetCharacterDetailsRequest::set_object_id(::google::protobuf::uint64 value) {
  set_has_object_id();
  object_id_ = value;
}

// optional fixed32 galaxy_id = 3;
inline bool GetCharacterDetailsRequest::has_galaxy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCharacterDetailsRequest::set_has_galaxy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCharacterDetailsRequest::clear_has_galaxy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCharacterDetailsRequest::clear_galaxy_id() {
  galaxy_id_ = 0u;
  clear_has_galaxy_id();
}
inline ::google::protobuf::uint32 GetCharacterDetailsRequest::galaxy_id() const {
  return galaxy_id_;
}
inline void GetCharacterDetailsRequest::set_galaxy_id(::google::protobuf::uint32 value) {
  set_has_galaxy_id();
  galaxy_id_ = value;
}

// optional string first_name = 7;
inline bool GetCharacterDetailsRequest::has_first_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCharacterDetailsRequest::set_has_first_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCharacterDetailsRequest::clear_has_first_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCharacterDetailsRequest::clear_first_name() {
  if (first_name_ != &::google::protobuf::internal::kEmptyString) {
    first_name_->clear();
  }
  clear_has_first_name();
}
inline const ::std::string& GetCharacterDetailsRequest::first_name() const {
  return *first_name_;
}
inline void GetCharacterDetailsRequest::set_first_name(const ::std::string& value) {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  first_name_->assign(value);
}
inline void GetCharacterDetailsRequest::set_first_name(const char* value) {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  first_name_->assign(value);
}
inline void GetCharacterDetailsRequest::set_first_name(const char* value, size_t size) {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  first_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCharacterDetailsRequest::mutable_first_name() {
  set_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    first_name_ = new ::std::string;
  }
  return first_name_;
}
inline ::std::string* GetCharacterDetailsRequest::release_first_name() {
  clear_has_first_name();
  if (first_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = first_name_;
    first_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCharacterDetailsRequest::set_allocated_first_name(::std::string* first_name) {
  if (first_name_ != &::google::protobuf::internal::kEmptyString) {
    delete first_name_;
  }
  if (first_name) {
    set_has_first_name();
    first_name_ = first_name;
  } else {
    clear_has_first_name();
    first_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string sur_name = 8;
inline bool GetCharacterDetailsRequest::has_sur_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetCharacterDetailsRequest::set_has_sur_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetCharacterDetailsRequest::clear_has_sur_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetCharacterDetailsRequest::clear_sur_name() {
  if (sur_name_ != &::google::protobuf::internal::kEmptyString) {
    sur_name_->clear();
  }
  clear_has_sur_name();
}
inline const ::std::string& GetCharacterDetailsRequest::sur_name() const {
  return *sur_name_;
}
inline void GetCharacterDetailsRequest::set_sur_name(const ::std::string& value) {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  sur_name_->assign(value);
}
inline void GetCharacterDetailsRequest::set_sur_name(const char* value) {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  sur_name_->assign(value);
}
inline void GetCharacterDetailsRequest::set_sur_name(const char* value, size_t size) {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  sur_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCharacterDetailsRequest::mutable_sur_name() {
  set_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    sur_name_ = new ::std::string;
  }
  return sur_name_;
}
inline ::std::string* GetCharacterDetailsRequest::release_sur_name() {
  clear_has_sur_name();
  if (sur_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sur_name_;
    sur_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCharacterDetailsRequest::set_allocated_sur_name(::std::string* sur_name) {
  if (sur_name_ != &::google::protobuf::internal::kEmptyString) {
    delete sur_name_;
  }
  if (sur_name) {
    set_has_sur_name();
    sur_name_ = sur_name;
  } else {
    clear_has_sur_name();
    sur_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string galaxy_name = 9;
inline bool GetCharacterDetailsRequest::has_galaxy_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetCharacterDetailsRequest::set_has_galaxy_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetCharacterDetailsRequest::clear_has_galaxy_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetCharacterDetailsRequest::clear_galaxy_name() {
  if (galaxy_name_ != &::google::protobuf::internal::kEmptyString) {
    galaxy_name_->clear();
  }
  clear_has_galaxy_name();
}
inline const ::std::string& GetCharacterDetailsRequest::galaxy_name() const {
  return *galaxy_name_;
}
inline void GetCharacterDetailsRequest::set_galaxy_name(const ::std::string& value) {
  set_has_galaxy_name();
  if (galaxy_name_ == &::google::protobuf::internal::kEmptyString) {
    galaxy_name_ = new ::std::string;
  }
  galaxy_name_->assign(value);
}
inline void GetCharacterDetailsRequest::set_galaxy_name(const char* value) {
  set_has_galaxy_name();
  if (galaxy_name_ == &::google::protobuf::internal::kEmptyString) {
    galaxy_name_ = new ::std::string;
  }
  galaxy_name_->assign(value);
}
inline void GetCharacterDetailsRequest::set_galaxy_name(const char* value, size_t size) {
  set_has_galaxy_name();
  if (galaxy_name_ == &::google::protobuf::internal::kEmptyString) {
    galaxy_name_ = new ::std::string;
  }
  galaxy_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCharacterDetailsRequest::mutable_galaxy_name() {
  set_has_galaxy_name();
  if (galaxy_name_ == &::google::protobuf::internal::kEmptyString) {
    galaxy_name_ = new ::std::string;
  }
  return galaxy_name_;
}
inline ::std::string* GetCharacterDetailsRequest::release_galaxy_name() {
  clear_has_galaxy_name();
  if (galaxy_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = galaxy_name_;
    galaxy_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCharacterDetailsRequest::set_allocated_galaxy_name(::std::string* galaxy_name) {
  if (galaxy_name_ != &::google::protobuf::internal::kEmptyString) {
    delete galaxy_name_;
  }
  if (galaxy_name) {
    set_has_galaxy_name();
    galaxy_name_ = galaxy_name;
  } else {
    clear_has_galaxy_name();
    galaxy_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetCharacterDetailsResponse

// repeated .swgemurpcserver.rpc.SWGEmuCharacterDetail character_details = 1;
inline int GetCharacterDetailsResponse::character_details_size() const {
  return character_details_.size();
}
inline void GetCharacterDetailsResponse::clear_character_details() {
  character_details_.Clear();
}
inline const ::swgemurpcserver::rpc::SWGEmuCharacterDetail& GetCharacterDetailsResponse::character_details(int index) const {
  return character_details_.Get(index);
}
inline ::swgemurpcserver::rpc::SWGEmuCharacterDetail* GetCharacterDetailsResponse::mutable_character_details(int index) {
  return character_details_.Mutable(index);
}
inline ::swgemurpcserver::rpc::SWGEmuCharacterDetail* GetCharacterDetailsResponse::add_character_details() {
  return character_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterDetail >&
GetCharacterDetailsResponse::character_details() const {
  return character_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::swgemurpcserver::rpc::SWGEmuCharacterDetail >*
GetCharacterDetailsResponse::mutable_character_details() {
  return &character_details_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc
}  // namespace swgemurpcserver

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CharacterDetails_2eproto__INCLUDED
